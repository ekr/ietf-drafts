<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC3261 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3261.xml">
<!ENTITY RFC3263 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3263.xml">
<!ENTITY RFC3325 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3325.xml">
<!ENTITY RFC4346 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4346.xml">
<!ENTITY RFC4347 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4347.xml">
<!ENTITY RFC4474 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4474.xml">

<!ENTITY I-D.ietf-avt-dtls-srtp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-avt-dtls-srtp">
]>
<!-- $Id -->
<?rfc inline="yes"?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc iprnotified="no" ?>
<!--<?rfc strict="yes" ?>-->
<?rfc compact="yes" ?>
<?rfc sortrefs="no" ?>
<?rfc colonspace='yes' ?>
<rfc category="std" docName="draft-rescorla-sip-identity.txt" ipr="full3978">
  <front>
    <title abbrev="SIP Identity">Untangling Identity in SIP Systems</title>

    <author fullname="Eric Rescorla" initials="E." surname="Rescorla">
      <organization>RTFM, Inc.</organization>

      <address>
        <postal>
          <street>2064 Edgewood Drive</street>

          <city>Palo Alto</city>

          <region>CA</region>

          <code>94303</code>

          <country>USA</country>
        </postal>

        <email>ekr@rtfm.com</email>
      </address>
    </author>


    <date month="February" year="2008" />

    <abstract>
      <t>There has been a lot of recent discussion about how to
      securely identify principals in SIP systems. This document
      attempts to clarify the inherent technical limits of this
      effort and the capabilities offered by certain schemes.
      </t>
    </abstract>
  </front>

  <middle>
  <section title="Introduction">
  <t>
    From the perspective of the communicating parties, the
    "identity" service that they want is simple: to know 
    that the person on the other end of the line is who
    they think it is. Because of the asymmetric nature of
    telephony, this actually represents two different
    services, one from the perspective of the caller and
    one from the perspective of the callee:
    <list style="hanging">
      <t hangText="Routing Integrity">The caller knows who he
      is trying to call--indeed he entered their number into
      his phone. The service the caller wants is ROUTING INTEGRITY:
      namely that the person he is talking to actually is who
      he intended to call. This service is complicated to
      some extent by retargeting services such as call forwarding,
      but in those cases the caller wants to know that the
      retargeting was authorized by the intended recipient.</t>
      <t hangText="Caller Identification">Unlike the caller, the
      callee generally does not have a preconceived idea of
      who he is trying to call. Rather, his phone rings and he
      wants to know who is calling. The service he wants is
      CALLER IDENTIFICATION.
      </t>
    </list>
    It is important to note that regardless of the technological
    means used to provide these services, they are extremely
    different conceptually. ROUTING INTEGRITY is a verification
    problem: the system needs to verify that you reached
    the person you were trying to reach. By contrast, CALLER
    IDENTIFICATION is an information provision problem. 
  </t>
  <t>
    A variety of technical mechanisms have been proposed (and
    are in use) to provide these services for SIP-based telephony
    <xref target="RFC3261"/>.
    Recently, questions have been raised about the suitability
    of one such mechanism: SIP Identity <xref target="RFC4474"/>.
    This draft is intended to provide a broader perspective
    on the identity problem, the inherent technical limitations on potential 
    solutions, and the capabilities of the existing approaches.
  </t>
  </section>
  
  <section title="Background: Identity in the PSTN">
    <t>Before addressing identity in SIP systems, it is useful to
    start with identity in the PSTN. The two most important facts
    about identity in the PSTN are these:
    <list>
      <t>The only valid identifiers were phone numbers.</t>
      <t>The PSTN is a fundamentally closed system with no 
      security real security mechanisms to prevent insider
      attack.</t>
    </list>
    As we shall see, these two properties allow for only a fairly
limited set
    of identity services.
    </t>
    <section title="PSTN Topology" anchor="sec.pstn-topo">
      <t>
	The PSTN is a hub-and-spoke topology, as shown below:
      </t>
      <figure>
	<artwork>
          Sub. 1 ----+                            +---- Sub. 4
                      \           Trunk          /
          Sub. 2 ------ CO-1 --------------- CO-2------ Sub. 5
                      /                          \
          Sub. 3 ----+                            +---- Sub. 6
	  
	</artwork>
      </figure>
      <t>
      Each subscriber is connected by a physical circuit to
      a switch in their local CENTRAL OFFICE (CO). Although there
      may be multiple phones in a single house, they are all
      electrically connected on the same local loop and are
      indistinguishable from the perspective of the CO 
      Therefore, all phones on the same local loop have the same 
      phone number.
      </t>
      <t>
      The CO is connected to other COs via trunk lines, which
      are used to carry calls in between COs. Similarly,
      providers can connect to each other at dedicated switches
      which only serve to switch traffic and don't have any
      subscribers directly attached to them. All of these
      connections are digital and speak SS7. The CO switch
      is the analog/digital boundary.
      </t>
      </section>
    <section title="Routing Integrity" anchor="sec.pstn-integrity">
      <t>
	From the very beginning, of telephony systems, it
	has been assumed that they provide routing integrity.
	This was historically viewed more as a correctness guarantee
	as a security
	guarantee--if your phone calls don't go the right place,
	there's not much point in having a phone--but it is
	of course also a security guarantee.
      </t>
      <t>
	When a subscriber wants to call another subscriber,
	they enter the phone number on the phone and it gets
	transmitted over the analog voice channel in DTMF
	(again, we're just talking about the basic analog
	case). The DTMF decoder at the CO switch decodes the 
	DTMF and determines which number the caller intends
	to call. If the number is assigned to that CO (and if
	the CO has an authoritative copy of which numbers have
	been ported), it can
	handle it locally. If the number is not assigned
	to that switch, then the call needs to be routed
	to another switch. This may be the final switch,
	or the call may be routed to another carrier and
	so on until it reaches the final switch.
      </t>
      <t>
	This routing information isn't kept locally, at least
	in the US. Instead, the switch needs to consult a numbering
	plan database [TODO: need the right name here] in
	order to determine which provider/switch controls that
	number. Once that is done, the switch routes the
	call down the appropriate trunk towards the appropriate
	destination.
      </t>
      <t>
	This system provides a relatively high degree of routing
	integrity provided that two invariants are preserved:
	<list style="symbols">
	<t>The inter-switch interconnects are kept secure.</t>
	<t>The connection to the numbering database (and the
	database itself) is secure.</t>
	</list>
	Both of these invariants are enforced through having
	a closed system. The connections between the switches
	are not virtual but rather are manually configured
	physical circuits, so impersonating one switch to
	another is a matter of actually interfering with
	that cable. The connection to the database is similarly
	manually configured [Note: I don't know if this is
	physical or over the Internet, but this obviously
	isn't an architectural issue.] 
      </t>
      <t>
	Both of these invariants, however, are very brittle against
	insider attack. An attacker who controls a switch can reroute
	all calls that would pass through it <xref target="securityfocus-call-theft"/>.
	An attacker who controls 
	the numbering database can inject arbitrary routes.
	The
	basic assumption is that insiders will not attempt to attack
	the system. 
      </t>
    </section>
    <section title="Caller Identification">
      <t>
	Unlike routing integrity, caller identification is a 
	relatively recent feature of common phone systems,
	The typical residential presentation is a one or two line display
	that shows the phone number of the calling party as
	well as their name (call center presentation is
	of course different.)
      </t>
      <t>
	In the PSTN CID is provided by having the
	originating switch indicate (in the SS7 signaling) the
	calling party's phone number. This is then modulated
	over the analog carrier for display on the callee's
	phone. If the caller's name is provided, it is determined
	by the callee's local switch, which needs to do a 
	database lookup against a third party database.
      </t>
      <t>
	Somewhat surprisingly, there is no enforcement whatsoever
	of the correctness of the provided number. The originator
	simply asserts it and it is trusted by the receiver.
	Moreover, if a call goes through intermediate carriers,
	then the trust here is transitive; each carrier
	trusts the previous carrier to provide correct
	information.
	In principle, it might be possible to do some sort of
	inbound route filtering using the numbering database
	(although that would only provide hop-by-hop assurance
	similar to that provided by uPRF) but in practice this is not done.
      </t>
      <t>
	The ability to forge the calling number is not limited
	to switches. Any subscriber with digital access (e.g., 
	ISDN)
	to the system can generate any calling number it
	chooses. Because the local switch knows which numbers
	are assigned to a given subscriber, it can in principle
	filter these assertions but even this is often not
	done. In other cases, subscribers can opt out of this
	kind of filtering in order to be allowed to assert numbers
	of their choice.
      </t>
      <t>
	The phone number to name mapping provided with caller
	id is even less trustworthy, since the databases are
	simply populated via the phone company's records, and
	they make no attempt to verify your real-world identity
	provided that you pay your bill.
      </t>
      <t>
      In summary, the caller identification service provided by the
      PSTN is completely untrustworthy, except as an assertion
      of the caller's intent.</t>
    </section>
  </section>


  <section title="Identity in SIP Systems">
    <t>
      We now turn to the question of identity in SIP systems.
      As before, we start with topology.
    </t>
    <section title="SIP Topology">
      <t>
      The figure below shows the classic "SIP trapezoid",
      the paradigmatic configuration for SIP-based telephony.
      To some extent, this is a hub-and-spoke system:
      each user agent is connected to a SIP proxy and the
      signalling (mostly) goes between proxies. However, for performance
      reasons the media is routed directly between the UAs.
      This is different from the PSTN, where the
      signalling and the media go through the same switches.
      </t>
      <figure>
	<artwork>                SIP
                 PROXY     --------------    PROXY
              (atlanta.com)               (biloxi.com)
             /                                         \
        SIP /                                           \ SIP
           /                                             \
          UA                                             UA
  (alice@atlanta.com)  &lt;-------- RTP --------&gt;  (bob@biloxi.com)

	</artwork>
      </figure>
      <t>
      The most important difference between the PSTN and VoIP is
      that the traffic between the various entities is not
      carried over dedicated physical circuits but over the
      Internet. As a consequence, an element cannot trust that
      data it receives claiming to be from another element
      in fact came from that element. Cryptographic mechanisms
      are required to restore this security.
      </t>
    </section>
    <section title="Channel Security Mechanisms" anchor="sec.sip-channel-sec">
      <t>
	The simplest and most widely used SIP security mechanisms
	are intended to provide same kind of link security that the PSTN
	provides using dedicated circuits over an Internet
	transport. In the SIP signalling system, there are two
	kinds of connections (UA-proxy and proxy-proxy) and this
	implies three kinds of security properties that must
	be enforced:
	<list>
	  <t>A SIP UA knows that it is communicating with its proxy.</t>
	  <t>A proxy knows which UA(s) it is communicating with.</t>
	  <t>A proxy knows which proxy (proxies) it is communicating
	  with.</t>
	</list>
	In SIP, these security properties are provided with two 
	mechanisms: TLS and Digest Authentication. Proxies 
	authenticate to UAs and to each other via TLS and 
	UAs authenticate to proxies via digest authentication.
	when Digest and TLS are used correctly, they are
	as secure, if not more secure, than the physical
	connections they replace. For instance, it is possible
	to steal someone's phone number by connecting to the
	box on the outside of their house. However, if your
	SIP phone is authenticated via digest authentication,
	then even an attacker connected to the Internet cable
	outside your house cannot impersonate you to the proxy.
      </t>
      <t>
	Digest and TLS alone are sufficient to allow the construction
	of a SIP system with equivalent (arguably superior) 
	signalling security (ignore the media for the moment)
	as that of the PSTN. The basic principle is the same:
	have a closed network where every proxy trusts every
	other proxy.
      </t>
      <section title="Routing Integrity">
	<t>
	  In the PSTN model, routing is done courtesy of a
	  giant database. This is necessitated by the existence
	  of a largely unstructured identifier space. Because
	  the SIP identifier space is structured along 
	  "user@domain" lines, less centralization is required.
	  Instead, messages directed to "alice@example.com"
	  need to be routed to the proxy "example.com". 
	  DNS <xref target="RFC3263"/> is used to identify the 
	  IP address of the relevant proxy and TLS 
	  certificates are used to authenticate it. 
	</t>
	<t>
	  The routing integrity properties of this system are
	  similar, and perhaps somewhat superior to those of the
	  PSTN. As with
	  the PSTN, if a proxy is compromised, then all
	  traffic that passes through that proxy can be
	  hijacked. Similarly, while the DNS database
	  need not be trusted, if the certificate authority
	  which is trusted to issue proxy certificates is
	  compromised, then an attacker can probably impersonate
	  other sites, but CAs can be operated more
	  securely than the number database server so
	  this attack is probably more difficult.
	</t>
	<t>
	  Note that the above only applies to SIP URIs that 
	  are in the "user@domain" form. SIP UAs can also accept
	  URIs that represent numbers in the PSTN (either as
	  sip: and tel: URIs). These calls must be routed
	  through a PSTN gateway, at which point the security
	  properties are those described in <xref target="sec.pstn-integrity"/>.
	</t>
      </section>
      <section title="Caller Identification">
	<t>
	  If only channel security is in use, then caller 
	  identification in SIP relies on transitive trust.
	  In the basic RFC3261 system, the caller simply
	  asserts their identity in the From header
	  and the caller either trusts it or does not. 
	  This is comparable to the case in the PSTN where an ISDN
	  user or a PBX asserts caller identity and the
	  switch does not check it.
	</t>
	<t>
	  In addition, the originating proxy (or perhaps some proxy
	  later in the chain) verify the user's
	  identity and inserts it into the PAI header
	  <xref target="RFC3325"/>. This 
	  header is explicitly intended
	  to be trusted and so proxies are intended to
	  do more than simply trust the user's From field.
	  However, PAI is not cryptographically protected in
	  any way (other than being carried over the TLS
	  connection, of course), and so any proxy in the
	  network can generate any PAI value of its choice.
	  Thus, a single compromised SIP proxy can impersonate
	  any user.
	</t>
	<t>
	  If a call enters a SIP network via a PSTN gateway,
	  the caller identification information (which, recall,
	  is basically untrustworthy), can be inserted into
	  the From or PAI headers, at which point it is as
	  vulnerable as if it were a "user@domain" identity.
	</t>
      </section>
    </section>

    <section title="Message Security Mechanisms">
      <t>
	As described in <xref target="sec.sip-channel-sec"/>,
	The security properties provided by channel security
	mechanisms are less than optimal, and RFC 3261 and
	followon RFCs describe a set of mechanisms intended
	to provide superior security guarantees. The basic
	principle is to secure the SIP messages themselves,
	rather than the channels that they pass over. This
	allows the creation of security properties that are
	end-to-end rather than hop-by-hop.
      </t>
      <section title="S/MIME">
	<t>
	  RFC 3261 included support for encrypting and signing
	  SIP message bodies with S/MIME. The idea was that
	  each end-user would have an S/MIME certificate containing
	  their domain name. Unfortunately, the burden of obtaining
	  end-user certificates has proven to be so high that
	  S/MIME has seen almost no deployment in SIP. However,
	  it is instructive to examine the security properties
	  that it would provide.
	</t>
	<section title="Routing Integrity">
	  <t>
	    S/MIME allows the partial provision of routing
	    integrity, even in the face of untrusted proxies.
	    In particular:
	    <list style="symbols">
	      <t>S/MIME encryption can be used to prevent anyone
	      but the intended recipient from reading the
	      message body.</t>
	      <t>If the callee signs his response, then the
	      callee can know the identity of the person he
	      reached.</t>
	    </list>
	    Unfortunately, neither feature interacts well
	    with proxy-based retargeting. If Alice calls Bob
	    and Bob's proxy server retargets to Charlie
	    (Bob's secretary), then the intended recipient
	    will not be the same as the actual recipient.
	    Alice has no way of distinguishing this event from
	    an attacker redirecting the traffic to Charlie.
	    Thus, although S/MIME provides cryptographic
	    mechanisms to stop retargeting, those mechanisms 
	    also stop legitimate retargeting.
	  </t>
	  <t>
	    Thus, S/MIME can provide some additional routing
	    integrity by giving the caller clear information
	    about who they reached. However, it does not provide
	    any mechanical way of determining whether that 
	    was the right person or not. It leaves that decision
	    to humans.
	  </t>
	</section>
	<section title="Caller Identification">
	  <t>
	    S/MIME does a better job of providing caller identification.
	    The caller can simply S/MIME sign her SIP messages and
	    the recipient can verify them and display the identity
	    in the caller's certificate as the caller's identity.
	    This is a relatively well understood problem in the
	    S/MIME arena, though user interface issues persist.
	  </t>
	  <t>
	    One caveat must be noted here. Because S/MIME only
	    the SIP body and not the headers, there are potential
	    replay and cut-and-paste attacks on the protocol.
	    These can be greatly mitigated by using secure
	    media which is cryptographically tied to the signalling.
	    More on this in Section XXX.
	  </t>
	</section>
	<section title="PSTN Gatewaying">
	  <t>
	    First, the S/MIME strategy
	    does not work particularly well on calls to and from
	    the PSTN. Clearly, POTS phones do not have S/MIME
	    certificates and will not be signing SIP messages.
	    The PSTN gateway can of course obtain certificates
	    of the form "+16505551212@example.com" for each
	    possible phone number (this only works for signatures,
	    not for encryption) but it's not clear why a callee should
	    trust such a certificate. In order for this to work,
	    there must be some way to determine which proxies
	    are authorized to assert which phone numbers. 
	    This is NOT a problem with S/MIME per se. It's
	    a basic problem in going from a system where every
	    node is fully trusted to one in which finer grained
	    trust is desired.
	  </t>
	</section>
      </section>
    </section> 
  </section>


  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;
    </references>
    <references title="Informational References">
      &RFC3711;
      &RFC4346;
      &RFC4347;
      &RFC4474;
      &RFC3261;
      &RFC3263;
      &RFC3325;
      &I-D.ietf-avt-dtls-srtp;

      <reference anchor="securityfocus-call-theft">
      <front>
	<author fullname="Kevin Poulsen" initials="K"
		surname="Poulsen">
	  <organization/>
	</author>
	<title>Commission Hearing Probes Vegas Vice Hacks</title>
      </front>
	<seriesInfo name="Security Focuse" value="http://www.securityfocus.com/news/355"/>
	<date day="18" month="March" year="2002"/>

      </reference>

    </references> 
  </back>
</rfc>

